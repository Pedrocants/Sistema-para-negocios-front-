{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Descargas/Chepps.proyect/CheppsFront-end/chepps-company/src/components/ModalProductos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ModalContent, Form, Label, Input, Button, Select } from './ModalStyles';\nimport Modal from 'react-modal';\nimport SelectInsumo from './selectInsumo';\nimport { obtenerDatos } from '../helper/traeDatos';\nimport { guardarProducto } from '../helper/url';\nimport ProductoManufacturado from '../prototype/ProductoManufacturado';\nimport ProductoDetalle from '../prototype/ProductoDetalle';\nimport Historial from '../prototype/Historial';\nimport MarcaRadioGroup from './MarcaRadioGroup';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalProductos = ({\n  isModalOpen,\n  toggleModal,\n  openConfirmationModal,\n  onLabel,\n  token\n}) => {\n  _s();\n  const [selected, setSelectedOption] = useState('No');\n  const [insumos, setInsumos] = useState(null);\n  const [compInsumo, setCompInsumo] = useState([]);\n  const [itemInsumo, setItemInsumo] = useState([]);\n  const [unidades, setUnidades] = useState(null);\n  const [denominacion, setDenominacion] = useState(null);\n  const [descripcion, setDescripcion] = useState(null);\n  const [precio, setPrecio] = useState(0);\n  const [stockActual, setStockActual] = useState(0);\n  const [stockMinimo, setStockMinimo] = useState(0);\n  const [unidad, setUnidad] = useState(null);\n  const [tiempo_estimado, setTiempoEstimado] = useState();\n  const [esParaElaborar, setElaborarOption] = useState(false);\n  const [denominacionUnidad, setDenominacionUnidad] = useState(\"\");\n  const [marca, setMarca] = useState(null);\n  const [optionMarca, setOptionMarca] = useState('Ninguna');\n  const [marcas, setMarcas] = useState([]);\n  useEffect(() => {\n    const urlInsumos = \"http://localhost:8080/public/insumo/retornarTodos\";\n    const urlUnidades = \"http://localhost:8080/public/unidad/obtenerUnidades\";\n    async function cargar() {\n      try {\n        const dataInsumo = await obtenerDatos(urlInsumos, 'GET', token);\n        const dataUnidades = await obtenerDatos(urlUnidades, 'GET', token);\n        setInsumos(dataInsumo);\n        setUnidades(dataUnidades);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    cargar();\n  }, [isModalOpen == true]);\n  const handleSelectChange = e => {\n    const option = e.target.value;\n    setSelectedOption(option);\n  };\n  const handleSelectChangeElaborar = e => {\n    const option = e.target.value;\n    setElaborarOption(option);\n  };\n  function addInsumo() {\n    if (insumos.length > 0) {\n      const nuevoInsumoComp = {\n        id: Date.now(),\n        insumos\n      };\n      setCompInsumo(() => [...compInsumo, nuevoInsumoComp]);\n    } else {\n      alert(\"no hay insumos para mostrar.\");\n    }\n  }\n  function addInsumoItem(item) {\n    if (insumos.length > 0) {\n      setItemInsumo(() => [...itemInsumo, item]);\n    }\n  }\n  const handlerStock = e => {\n    const stock = parseFloat(e.target.value);\n    if (stock < stockMinimo) {\n      alert(\"stock no puede ser menor a \" + stockMinimo);\n      e.target.value = \"\";\n      return;\n    }\n    setStockActual(stock);\n  };\n  const handlerSelectUnidad = e => {\n    setUnidad(() => parseInt(e.target.value));\n    setDenominacionUnidad(() => e.target.options[e.target.selectedIndex].text);\n  };\n  function cargarProducto() {\n    let esManufacturado = true;\n    let dataRespuesta = null;\n    if (denominacion == null) {\n      alert(\"debe ingresar un nombre.\");\n      return;\n    }\n    if (denominacion.length > 50) {\n      alert(\"denominacion: longitud no permitida.\");\n      return;\n    }\n    if (typeof precio == \"string\") {\n      alert(\"Campo precio debe ser un numero.\");\n      return;\n    }\n    if (descripcion != null && descripcion.length > 255) {\n      alert(\"descripcion: cantidad de caracteres no soportada.\");\n      return;\n    }\n    if (marca != null && marca.length > 50) {\n      alert(\"marca: longitud no soportada.\");\n    }\n    const producto = {\n      denominacion,\n      idUnidadMedida: {\n        idUnidadMedida: unidad\n      },\n      insumos: itemInsumo,\n      descripcion,\n      stockActual,\n      stockMinimo,\n      tiempo_estimado: tiempo_estimado != null ? tiempo_estimado : new Date(),\n      precio\n    };\n    if (selected == 'No') {\n      if (itemInsumo.length <= 0) {\n        alert(\"Si es un producto manufacturado, debe tener al menos 1 producto insumo.\");\n        return;\n      }\n      let ins = [];\n      let historial = [];\n      for (let i = 0; i < producto.insumos.length; i++) {\n        ins = [...ins, {\n          idInsumo: producto.insumos[i].idInsumo\n        }];\n        historial = [...historial, new Historial(null, producto.insumos[i].idInsumo, producto.insumos[i].cantidad, producto.insumos[i].texto)];\n      }\n      const detalle = new ProductoDetalle(null, producto.stockActual, producto.stockMinimo);\n      const ProductoMan = new ProductoManufacturado(producto.denominacion, producto.idUnidadMedida, detalle, ins, historial, producto.precio, 0, producto.descripcion, producto.tiempo_estimado, false);\n\n      //console.log(ProductoMan);\n      dataRespuesta = enviar(esManufacturado, ProductoMan);\n    } else {\n      esManufacturado = false;\n      const ProductoInsumo = {\n        idInsumo: null,\n        UnidadMedida: producto.idUnidadMedida,\n        detalle: new ProductoDetalle(null, producto.stockActual, producto.stockMinimo),\n        precio: producto.precio,\n        denominacion: producto.denominacion,\n        esParaElaborar: esParaElaborar,\n        eliminado: false,\n        marca: marca != null && marca != \"\" ? {\n          idMarca: null,\n          nombre: marca\n        } : null\n      };\n      //console.log(ProductoInsumo);\n      dataRespuesta = enviar(esManufacturado, ProductoInsumo);\n    }\n    if (dataRespuesta != null) {\n      onLabel(esManufacturado ? \"Producto manufacturado añadido con exito!\" : \"Producto o insumo añadido con exiito!\");\n      limpiarCampos();\n      toggleModal();\n      openConfirmationModal();\n    }\n    return;\n  }\n  async function enviar(esManufacturado, producto) {\n    const url = guardarProducto(esManufacturado);\n    const data = await obtenerDatos(url, 'POST', producto);\n    return data;\n  }\n  const limpiarCampos = () => {\n    setDenominacion(\"\");\n    setMarca(\"\");\n    setStockMinimo(\"\");\n    setStockActual(\"\");\n    setDescripcion(\"\");\n    setTiempoEstimado(\"\");\n    setPrecio(\"\");\n    setSelectedOption(\"No\");\n    setElaborarOption(false);\n    setUnidad(null);\n    setDenominacionUnidad(\"\");\n    setCompInsumo([]);\n    setItemInsumo([]);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isModalOpen,\n    onRequestClose: toggleModal,\n    contentLabel: \"Formulario de Nuevo producto\",\n    style: {\n      overlay: {\n        background: \"rgba(0, 0, 0, 0.8)\"\n      },\n      content: {\n        width: \"90%\",\n        maxWidth: \"600px\",\n        margin: \"auto\",\n        padding: \"2rem\",\n        borderRadius: \"16px\",\n        background: \"#121212\",\n        border: \"none\",\n        boxShadow: \"0 10px 30px rgba(0, 0, 0, 0.5)\"\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nuevo producto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"denominacion\",\n          children: \"Denominacion:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"denominacion\",\n          required: true,\n          onChange: e => setDenominacion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), unidades && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Unidad de medida:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            onChange: handlerSelectUnidad,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Seleccionar uno...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this), unidades.map(unidad => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: unidad.idUnidadMedida,\n              children: unidad.denominacion\n            }, unidad.idUnidadMedida, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Detalles del producto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"\\xBFEs un producto insumo?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          onChange: handleSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 'No',\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 'Si',\n            children: \"Si\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), selected == 'No' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Producto manufacturado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: addInsumo,\n            children: \"Agregar insumo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this), compInsumo.map(comp => /*#__PURE__*/_jsxDEV(SelectInsumo, {\n            insumos: insumos,\n            addInsumoItem: addInsumoItem,\n            denomUnidad: denominacionUnidad\n          }, comp.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Producto/insumo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: \"\\xBFes para elaborar?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            onChange: handleSelectChangeElaborar,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: false,\n              defaultValue: false,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: true,\n              children: \"Si\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"marca\",\n            children: \"Marca (opcional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(MarcaRadioGroup, {\n            optionMarca: optionMarca,\n            setOptionMarca: setOptionMarca\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 33\n          }, this), optionMarca == 'Nueva' && /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"marca\",\n            onChange: e => setMarca(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 41\n          }, this), optionMarca == 'Elegir' && /*#__PURE__*/_jsxDEV(Select, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"stockMin\",\n          children: \"Stock minimo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          name: \"stockMin\",\n          onChange: e => setStockMinimo(e.target.value),\n          step: \"0.01\",\n          min: \"0\",\n          max: \"100000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"stock\",\n          children: \"Stock actual:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          name: \"stock\",\n          onChange: handlerStock,\n          step: \"0.01\",\n          min: \"0\",\n          max: \"100000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), selected == 'No' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Descripcion:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            onChange: e => setDescripcion(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: [\"Tiempo estimado: \", \"(Opcional)\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"time\",\n            onChange: e => setTiempoEstimado(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Precio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          onChange: e => setPrecio(parseFloat(e.target.value)),\n          step: \"0.01\",\n          min: \"0\",\n          max: \"100000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: cargarProducto,\n          children: \"Aceptar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n};\n_s(ModalProductos, \"+aDXVZPZJfKYyFsWIGcbCR/wtFk=\");\n_c = ModalProductos;\nexport default ModalProductos;\nvar _c;\n$RefreshReg$(_c, \"ModalProductos\");","map":{"version":3,"names":["React","useState","useEffect","ModalContent","Form","Label","Input","Button","Select","Modal","SelectInsumo","obtenerDatos","guardarProducto","ProductoManufacturado","ProductoDetalle","Historial","MarcaRadioGroup","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalProductos","isModalOpen","toggleModal","openConfirmationModal","onLabel","token","_s","selected","setSelectedOption","insumos","setInsumos","compInsumo","setCompInsumo","itemInsumo","setItemInsumo","unidades","setUnidades","denominacion","setDenominacion","descripcion","setDescripcion","precio","setPrecio","stockActual","setStockActual","stockMinimo","setStockMinimo","unidad","setUnidad","tiempo_estimado","setTiempoEstimado","esParaElaborar","setElaborarOption","denominacionUnidad","setDenominacionUnidad","marca","setMarca","optionMarca","setOptionMarca","marcas","setMarcas","urlInsumos","urlUnidades","cargar","dataInsumo","dataUnidades","e","console","error","handleSelectChange","option","target","value","handleSelectChangeElaborar","addInsumo","length","nuevoInsumoComp","id","Date","now","alert","addInsumoItem","item","handlerStock","stock","parseFloat","handlerSelectUnidad","parseInt","options","selectedIndex","text","cargarProducto","esManufacturado","dataRespuesta","producto","idUnidadMedida","ins","historial","i","idInsumo","cantidad","texto","detalle","ProductoMan","enviar","ProductoInsumo","UnidadMedida","eliminado","idMarca","nombre","limpiarCampos","url","data","isOpen","onRequestClose","contentLabel","style","overlay","background","content","width","maxWidth","margin","padding","borderRadius","border","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","required","onChange","map","onClick","comp","denomUnidad","defaultValue","step","min","max","_c","$RefreshReg$"],"sources":["/home/pedro/Descargas/Chepps.proyect/CheppsFront-end/chepps-company/src/components/ModalProductos.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ModalContent, Form, Label, Input, Button, Select } from './ModalStyles';\nimport Modal from 'react-modal';\nimport SelectInsumo from './selectInsumo';\nimport { obtenerDatos } from '../helper/traeDatos';\nimport { guardarProducto } from '../helper/url';\nimport ProductoManufacturado from '../prototype/ProductoManufacturado';\nimport ProductoDetalle from '../prototype/ProductoDetalle';\nimport Historial from '../prototype/Historial';\nimport MarcaRadioGroup from './MarcaRadioGroup';\n\nconst ModalProductos = ({ isModalOpen, toggleModal, openConfirmationModal, onLabel, token }) => {\n\n    const [selected, setSelectedOption] = useState('No')\n    const [insumos, setInsumos] = useState(null);\n    const [compInsumo, setCompInsumo] = useState([]);\n    const [itemInsumo, setItemInsumo] = useState([]);\n    const [unidades, setUnidades] = useState(null);\n    const [denominacion, setDenominacion] = useState(null);\n    const [descripcion, setDescripcion] = useState(null);\n    const [precio, setPrecio] = useState(0);\n    const [stockActual, setStockActual] = useState(0);\n    const [stockMinimo, setStockMinimo] = useState(0);\n    const [unidad, setUnidad] = useState(null);\n    const [tiempo_estimado, setTiempoEstimado] = useState();\n    const [esParaElaborar, setElaborarOption] = useState(false);\n    const [denominacionUnidad, setDenominacionUnidad] = useState(\"\");\n    const [marca, setMarca] = useState(null);\n    const [optionMarca, setOptionMarca] = useState('Ninguna');\n    const [marcas, setMarcas] = useState([]);\n\n\n    useEffect(() => {\n        const urlInsumos = \"http://localhost:8080/public/insumo/retornarTodos\";\n        const urlUnidades = \"http://localhost:8080/public/unidad/obtenerUnidades\";\n\n        async function cargar() {\n            try {\n                const dataInsumo = await obtenerDatos(urlInsumos, 'GET', token);\n                const dataUnidades = await obtenerDatos(urlUnidades, 'GET', token);\n                setInsumos(dataInsumo);\n                setUnidades(dataUnidades);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n        cargar();\n    }, [isModalOpen == true])\n\n    const handleSelectChange = (e) => {\n        const option = e.target.value;\n        setSelectedOption(option);\n    }\n    const handleSelectChangeElaborar = (e) => {\n        const option = e.target.value;\n        setElaborarOption(option);\n    }\n    function addInsumo() {\n        if (insumos.length > 0) {\n\n            const nuevoInsumoComp = {\n                id: Date.now(),\n                insumos\n            };\n            setCompInsumo(() => [...compInsumo, nuevoInsumoComp]);\n        } else {\n            alert(\"no hay insumos para mostrar.\");\n        }\n    }\n    function addInsumoItem(item) {\n        if (insumos.length > 0) {\n            setItemInsumo(() => [...itemInsumo, item]);\n        }\n    }\n    const handlerStock = (e) => {\n        const stock = parseFloat(e.target.value);\n        if (stock < stockMinimo) {\n            alert(\"stock no puede ser menor a \" + stockMinimo);\n            e.target.value = \"\";\n            return;\n        }\n        setStockActual(stock);\n    }\n    const handlerSelectUnidad = (e) => {\n        setUnidad(() => parseInt(e.target.value));\n        setDenominacionUnidad(() => e.target.options[e.target.selectedIndex].text);\n    }\n\n    function cargarProducto() {\n        let esManufacturado = true;\n        let dataRespuesta = null;\n\n        if (denominacion == null) {\n            alert(\"debe ingresar un nombre.\");\n            return;\n        }\n        if (denominacion.length > 50) {\n            alert(\"denominacion: longitud no permitida.\");\n            return;\n        }\n        if (typeof precio == \"string\") {\n            alert(\"Campo precio debe ser un numero.\");\n            return;\n        }\n        if (descripcion != null && descripcion.length > 255) {\n            alert(\"descripcion: cantidad de caracteres no soportada.\")\n            return;\n        }\n        if (marca != null && marca.length > 50) {\n            alert(\"marca: longitud no soportada.\");\n        }\n        const producto = {\n            denominacion,\n            idUnidadMedida: {\n                idUnidadMedida: unidad\n            },\n            insumos: itemInsumo,\n            descripcion,\n            stockActual,\n            stockMinimo,\n            tiempo_estimado: (tiempo_estimado != null) ? tiempo_estimado : new Date(),\n            precio\n        }\n        if (selected == 'No') {\n            if (itemInsumo.length <= 0) {\n                alert(\"Si es un producto manufacturado, debe tener al menos 1 producto insumo.\")\n                return;\n            }\n            let ins = [];\n            let historial = [];\n\n            for (let i = 0; i < producto.insumos.length; i++) {\n\n                ins = [...ins, {\n                    idInsumo: producto.insumos[i].idInsumo\n                }];\n                historial = [...historial, new Historial(null, producto.insumos[i].idInsumo, producto.insumos[i].cantidad, producto.insumos[i].texto)];\n            }\n            const detalle = new ProductoDetalle(null, producto.stockActual, producto.stockMinimo);\n\n            const ProductoMan = new ProductoManufacturado(producto.denominacion, producto.idUnidadMedida, detalle, ins, historial, producto.precio, 0, producto.descripcion, producto.tiempo_estimado, false);\n\n            //console.log(ProductoMan);\n            dataRespuesta = enviar(esManufacturado, ProductoMan);\n\n        } else {\n            esManufacturado = false;\n            const ProductoInsumo = {\n                idInsumo: null,\n                UnidadMedida: producto.idUnidadMedida,\n                detalle: new ProductoDetalle(null, producto.stockActual, producto.stockMinimo),\n                precio: producto.precio,\n                denominacion: producto.denominacion,\n                esParaElaborar: esParaElaborar,\n                eliminado: false,\n                marca: (marca != null && marca != \"\") ? {\n                    idMarca: null,\n                    nombre: marca\n                } : null\n            }\n            //console.log(ProductoInsumo);\n            dataRespuesta = enviar(esManufacturado, ProductoInsumo);\n        }\n        if (dataRespuesta != null) {\n\n            onLabel((esManufacturado) ? \"Producto manufacturado añadido con exito!\" : \"Producto o insumo añadido con exiito!\");\n\n            limpiarCampos();\n            toggleModal();\n            openConfirmationModal();\n        }\n        return;\n    }\n\n    async function enviar(esManufacturado, producto) {\n\n        const url = guardarProducto(esManufacturado);\n\n        const data = await obtenerDatos(url, 'POST', producto);\n\n        return data;\n    }\n\n    const limpiarCampos = () => {\n        setDenominacion(\"\");\n        setMarca(\"\");\n        setStockMinimo(\"\");\n        setStockActual(\"\");\n        setDescripcion(\"\");\n        setTiempoEstimado(\"\");\n        setPrecio(\"\");\n        setSelectedOption(\"No\");\n        setElaborarOption(false);\n        setUnidad(null);\n        setDenominacionUnidad(\"\");\n        setCompInsumo([]);\n        setItemInsumo([]);\n    };\n\n    return (\n        <Modal isOpen={isModalOpen} onRequestClose={toggleModal} contentLabel=\"Formulario de Nuevo producto\" style={{\n            overlay: {\n                background: \"rgba(0, 0, 0, 0.8)\",\n            },\n            content: {\n                width: \"90%\",\n                maxWidth: \"600px\",\n                margin: \"auto\",\n                padding: \"2rem\",\n                borderRadius: \"16px\",\n                background: \"#121212\",\n                border: \"none\",\n                boxShadow: \"0 10px 30px rgba(0, 0, 0, 0.5)\"\n            }\n        }}>\n            <ModalContent>\n                <h1>Nuevo producto</h1>\n                <hr />\n                <Form>\n\n                    <Label htmlFor=\"denominacion\">Denominacion:</Label>\n                    <Input type=\"text\" name=\"denominacion\" required onChange={(e) => (setDenominacion(e.target.value))} />\n                    {unidades && (\n                        <>\n                            <Label>Unidad de medida:</Label>\n                            <Select onChange={handlerSelectUnidad}>\n                                <option>Seleccionar uno...</option>\n                                {unidades.map((unidad) => (\n                                    <option key={unidad.idUnidadMedida} value={unidad.idUnidadMedida}>{unidad.denominacion}</option>\n                                ))}\n                            </Select>\n                        </>\n                    )}\n                    <h3>Detalles del producto:</h3>\n                    <Label>¿Es un producto insumo?</Label>\n                    <Select onChange={handleSelectChange}>\n                        <option value={'No'}>No</option>\n                        <option value={'Si'}>Si</option>\n                    </Select>\n                    {\n                        selected == 'No' ? (\n                            <>\n                                <h3>Producto manufacturado</h3>\n                                <Button type=\"button\" onClick={addInsumo}>Agregar insumo</Button>\n                                {compInsumo.map((comp) => (\n                                    <SelectInsumo key={comp.id}\n                                        insumos={insumos} addInsumoItem={addInsumoItem} denomUnidad={denominacionUnidad} />\n                                ))}\n                            </>\n                        ) : (\n                            <>\n                                <h3>Producto/insumo</h3>\n                                <Label>¿es para elaborar?</Label>\n                                <Select onChange={handleSelectChangeElaborar}>\n                                    <option value={false} defaultValue={false}>No</option>\n                                    <option value={true}>Si</option>\n                                </Select>\n                                <Label htmlFor=\"marca\">{\"Marca (opcional)\"}</Label>\n                                <MarcaRadioGroup optionMarca={optionMarca} setOptionMarca={setOptionMarca} />\n                                {\n                                    optionMarca == 'Nueva' && (\n                                        <Input type=\"text\" name=\"marca\" onChange={(e) => (setMarca(e.target.value))} />\n                                    )\n                                }\n                                {\n                                    optionMarca == 'Elegir' && (\n                                        <Select>\n\n                                        </Select>\n                                    )\n                                }\n                            </>\n                        )\n                    }\n                    <Label htmlFor=\"stockMin\">Stock minimo:</Label>\n                    <Input type=\"number\" name=\"stockMin\" onChange={(e) => (setStockMinimo(e.target.value))} step=\"0.01\" min=\"0\" max=\"100000\" />\n                    <Label htmlFor=\"stock\">Stock actual:</Label>\n                    <Input type=\"number\" name=\"stock\" onChange={handlerStock} step=\"0.01\" min=\"0\" max=\"100000\" />\n                    {\n                        selected == 'No' && (\n                            <>\n\n                                <Label>Descripcion:</Label>\n                                <Input type=\"text\" onChange={(e) => (setDescripcion(e.target.value))} />\n\n                                <Label>Tiempo estimado: {\"(Opcional)\"} </Label>\n                                <Input\n                                    type=\"time\"\n                                    onChange={(e) => setTiempoEstimado(e.target.value)}\n                                />\n\n\n                            </>\n                        )\n                    }\n                    <Label>Precio:</Label>\n                    <Input type=\"number\" onChange={(e) => (setPrecio(parseFloat(e.target.value)))} step=\"0.01\" min=\"0\" max=\"100000\" />\n                    <Button type=\"button\" onClick={cargarProducto}>Aceptar</Button>\n                    <Button>Cancelar</Button>\n                </Form>\n            </ModalContent>\n        </Modal >\n    )\n}\n\nexport default ModalProductos"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}