{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Descargas/Chepps.proyect/CheppsFront-end/chepps-company/src/components/modalOrdenes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport styled from 'styled-components';\nimport { obtenerDatos } from '../helper/traeDatos';\nimport { ProductoDetalle } from './ProductoDetalle';\nimport Contacto from '../prototype/Contacto';\nimport Orden from '../prototype/Orden';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Select = styled.select`\n  width: 87%;\n  padding: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n  margin-left: 10px;\n  background-color: #555; /* Fondo gris para los campos */\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  outline: none;\n\n  &::placeholder {\n    color: #ccc;\n  }\n`;\n_c = Select;\nconst ModalContent = styled.div`\n  background: #333;\n  padding: 20px;\n  border-radius: 8px;\n  color: #fff;\n  max-width: 500px;\n  width: 100%;\n  height: auto;\n  margin: 0 auto;\n`;\n_c2 = ModalContent;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n`;\n_c3 = Form;\nconst Label = styled.label`\n  width: 100%;\n  color: #bbb;\n  font-size: 14px;\n`;\n_c4 = Label;\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  background-color: #555;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  outline: none;\n\n  &::placeholder {\n    color: #ccc;\n  }\n`;\n_c5 = Input;\nconst Button = styled.button`\n  background-color: #e0a800;\n  color: #000;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-top: 10px;\n\n  &:hover {\n    background-color: #ffd700;\n  }\n`;\n_c6 = Button;\nconst ModalOrdenes = ({\n  isModalOpen,\n  toggleModal,\n  openConfirmationModal,\n  userId\n}) => {\n  _s();\n  const [sumaTotal, setSumaTotal] = useState(0);\n  const [productos, setProductos] = useState(null);\n  const [insumos, setInsumos] = useState([]);\n  const [clientes, setClientes] = useState([]);\n  const [detalles, setDetalles] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [pagado, setPagado] = useState(null);\n  const [tipo, setTipo] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [ordenDetalle, setOrdenDetalle] = useState([]);\n  //console.log(userId);\n\n  const handleSelectChange = e => {\n    const selectedItemid = parseInt(e.target.value, 10);\n    const item = clientes.find(item => item.idCliente === selectedItemid);\n    setSelectedItem(item);\n  };\n  useEffect(() => {\n    const cargarProductosYClientes = async () => {\n      try {\n        const url = \"http://localhost:8080/public/productos\";\n        const urlClientes = \"http://localhost:8080/public/clientes\";\n        const urlInsumos = \"http://localhost:8080/public/insumo/retornarTodos\";\n        const dataProductos = await obtenerDatos(url, 'GET');\n        const dataClientes = await obtenerDatos(urlClientes, 'GET');\n        const dataInsumo = await obtenerDatos(urlInsumos, 'GET');\n        setProductos(dataProductos);\n        setClientes(dataClientes);\n        setInsumos(dataInsumo);\n      } catch (error) {\n        console.error('Error al cargar los productos:', error);\n      }\n    };\n    cargarProductosYClientes();\n  }, [!productos]);\n\n  // Función para agregar un nuevo ProductoDetalle\n  const handleAgregarDetalle = () => {\n    if (productos.length > 0) {\n      // Generamos un identificador único para cada detalle\n      const nuevoDetalle = {\n        id: Date.now(),\n        // ID único\n        productos,\n        insumos,\n        suma: 0 // Inicializamos la suma en 0\n      };\n      setDetalles([...detalles, nuevoDetalle]);\n    } else {\n      console.warn('Productos no disponibles para agregar.');\n    }\n  };\n\n  // Función para quitar el último ProductoDetalle\n  const handleQuitarDetalle = () => {\n    if (detalles.length > 0) {\n      // Eliminar el último detalle y restar su suma del total\n      const ultimoDetalle = detalles[detalles.length - 1];\n      console.log(ultimoDetalle);\n      const ultimaOrdenDetalle = ordenDetalle[detalles.length - 1];\n      const descuento = ultimaOrdenDetalle && ultimaOrdenDetalle.descuentosPorProducto ? parseFloat(ultimaOrdenDetalle.descuentosPorProducto) : 0;\n      const nuevaSuma = parseFloat(ultimoDetalle.suma) - descuento;\n      console.log(nuevaSuma);\n      //console.log(ultimoDetalle);\n      //console.log(descuento);\n      //console.log(ultimaOrdenDetalle);\n\n      setSumaTotal(prevSumaTotal => (prevSumaTotal - ultimoDetalle.suma).toFixed(2));\n      setTotal(prevTotal => prevTotal - nuevaSuma);\n      setDetalles(prevDetalles => prevDetalles.slice(0, -1));\n      if (ordenDetalle.length === detalles.length) {\n        setOrdenDetalle(prevOrdenDetalle => prevOrdenDetalle.slice(0, -1));\n      }\n    }\n  };\n  const actualizarSumaDetalle = (id, nuevaSuma) => {\n    setDetalles(prevDetalles => {\n      // Actualizamos el detalle específico\n      const nuevosDetalles = prevDetalles.map(detalle => detalle.id === id ? {\n        ...detalle,\n        suma: nuevaSuma\n      } : detalle);\n\n      // Recalculamos la suma total usando los nuevos detalles\n      const nuevaSumaTotal = nuevosDetalles.reduce((total, detalle) => total + detalle.suma, 0);\n\n      // Actualizamos la suma total\n      setSumaTotal(nuevaSumaTotal);\n      return nuevosDetalles; // Retornamos el nuevo estado de los detalles\n    });\n  };\n  const enviarDatos = event => {\n    event.preventDefault(); // Previene la recarga del formulario\n\n    if (!selectedItem) {\n      alert('Seleccione un cliente antes de guardar.');\n      return;\n    }\n    if (!sumaTotal) {\n      alert('Total de orden no puede ser 0');\n      return;\n    }\n    if (detalles.length === 0) {\n      alert('Agregue al menos un detalle.');\n      return;\n    }\n    if (!pagado) {\n      alert('Pagado debe contener un valor');\n      return;\n    }\n    if (!tipo) {\n      alert('Seleccione un tipo de orden');\n      return;\n    }\n\n    // Capturar valores del formulario\n    const form = event.target;\n    const direccion = form.calle.value;\n    const provincia = form.provincia.value;\n    const telefono = form.telefono.value;\n    const email = form.email.value;\n    const fecha_entrega = form.fecha.value ? form.fecha.value : new Date().toISOString();\n    const contacto = new Contacto({\n      idContacto: null,\n      telefono: telefono,\n      email: email\n    });\n\n    //console.log(descuentosPorProducto);\n    const orden = new Orden({\n      cliente: selectedItem,\n      contacto: contacto,\n      domicilio: {\n        direccion,\n        provincia\n      },\n      usuario: {\n        idUsuario: userId\n      },\n      detalle: ordenDetalle,\n      fecha_entrega,\n      subTotal: sumaTotal,\n      total: total,\n      pagado\n    });\n    console.log(orden);\n    /*\n    const ordenRespuesta = cargarOrden(orden);\n     if (ordenRespuesta) {\n       toggleModal();\n      openConfirmationModal();\n     } else {\n      alert(\"Ha ocurrido un error!\");\n    }*/\n  };\n  async function cargarOrden(orden) {\n    const url = 'http://localhost:8080/public/orden/guardar';\n    const data = await obtenerDatos(url, 'POST', orden);\n    return data;\n  }\n  function calcularDescuentos() {\n    let descuentosPorProducto = 0;\n    if (ordenDetalle.length > 0) {\n      for (let i = 0; i < ordenDetalle.length; i++) {\n        if (ordenDetalle[i].descuentosPorProducto > 0 && ordenDetalle[i].descuentosPorProducto <= sumaTotal) {\n          descuentosPorProducto += parseFloat(ordenDetalle[i].descuentosPorProducto);\n        }\n      }\n      descuentosPorProducto = sumaTotal - descuentosPorProducto;\n      setTotal(() => descuentosPorProducto);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isModalOpen,\n    onRequestClose: toggleModal,\n    contentLabel: \"Formulario de Nueva Orden\",\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Nueva Orden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: enviarDatos,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          onChange: handleSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Seleccione uno...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), clientes.map(cliente => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cliente.idCliente,\n            children: [cliente.nombre, \"  \", cliente.apellido ? cliente.apellido : '']\n          }, cliente.idCliente, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Domicilio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"calle\",\n            defaultValue: \"Domicilio generico.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: \"Provincia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"provincia\",\n            defaultValue: \"Mendoza\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Contacto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: \"Telefono:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"tel\",\n            name: \"telefono\",\n            defaultValue: \"261\",\n            maxLength: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            name: \"email\",\n            defaultValue: \"alguien@example.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), detalles.map(detalle => /*#__PURE__*/_jsxDEV(ProductoDetalle, {\n          cont: detalles.length,\n          contOrdenesDetalle: ordenDetalle.length,\n          productos: detalle.productos,\n          insumos: detalle.insumos,\n          onActualizarSumaTotal: nuevaSuma => actualizarSumaDetalle(detalle.id, nuevaSuma),\n          setOrdenDetalle: setOrdenDetalle,\n          calcularDescuentos: calcularDescuentos\n        }, detalle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: handleAgregarDetalle,\n          children: \"Agregar l\\xEDnea de producto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: handleQuitarDetalle,\n          disabled: detalles.length === 0,\n          children: \"Quitar \\xDAltimo Detalle del Producto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Fecha de Entrega:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"datetime-local\",\n          name: \"fecha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Tipo: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          onChange: event => setTipo(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: null,\n            children: \"Seleccione uno...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 'PAGO',\n            children: \"PAGO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 'COMPRA',\n            children: \"COMPRA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 'VENTA',\n            children: \"VENTA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Pagado:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          placeholder: \"9.99\",\n          onChange: event => setPagado(parseFloat(event.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"subTotal: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", sumaTotal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Total Orden: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: toggleModal,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalOrdenes, \"NZzYQqf0nank0bhmJ7ijXS51itw=\");\n_c7 = ModalOrdenes;\nexport default ModalOrdenes;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Select\");\n$RefreshReg$(_c2, \"ModalContent\");\n$RefreshReg$(_c3, \"Form\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"Input\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"ModalOrdenes\");","map":{"version":3,"names":["React","useState","useEffect","Modal","styled","obtenerDatos","ProductoDetalle","Contacto","Orden","jsxDEV","_jsxDEV","Select","select","_c","ModalContent","div","_c2","Form","form","_c3","Label","label","_c4","Input","input","_c5","Button","button","_c6","ModalOrdenes","isModalOpen","toggleModal","openConfirmationModal","userId","_s","sumaTotal","setSumaTotal","productos","setProductos","insumos","setInsumos","clientes","setClientes","detalles","setDetalles","selectedItem","setSelectedItem","pagado","setPagado","tipo","setTipo","total","setTotal","ordenDetalle","setOrdenDetalle","handleSelectChange","e","selectedItemid","parseInt","target","value","item","find","idCliente","cargarProductosYClientes","url","urlClientes","urlInsumos","dataProductos","dataClientes","dataInsumo","error","console","handleAgregarDetalle","length","nuevoDetalle","id","Date","now","suma","warn","handleQuitarDetalle","ultimoDetalle","log","ultimaOrdenDetalle","descuento","descuentosPorProducto","parseFloat","nuevaSuma","prevSumaTotal","toFixed","prevTotal","prevDetalles","slice","prevOrdenDetalle","actualizarSumaDetalle","nuevosDetalles","map","detalle","nuevaSumaTotal","reduce","enviarDatos","event","preventDefault","alert","direccion","calle","provincia","telefono","email","fecha_entrega","fecha","toISOString","contacto","idContacto","orden","cliente","domicilio","usuario","idUsuario","subTotal","cargarOrden","data","calcularDescuentos","i","isOpen","onRequestClose","contentLabel","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","nombre","apellido","type","name","defaultValue","maxLength","cont","contOrdenesDetalle","onActualizarSumaTotal","onClick","disabled","placeholder","_c7","$RefreshReg$"],"sources":["/home/pedro/Descargas/Chepps.proyect/CheppsFront-end/chepps-company/src/components/modalOrdenes.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport styled from 'styled-components';\nimport { obtenerDatos } from '../helper/traeDatos';\nimport { ProductoDetalle } from './ProductoDetalle';\nimport Contacto from '../prototype/Contacto';\nimport Orden from '../prototype/Orden';\n\nconst Select = styled.select`\n  width: 87%;\n  padding: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n  margin-left: 10px;\n  background-color: #555; /* Fondo gris para los campos */\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  outline: none;\n\n  &::placeholder {\n    color: #ccc;\n  }\n`;\nconst ModalContent = styled.div`\n  background: #333;\n  padding: 20px;\n  border-radius: 8px;\n  color: #fff;\n  max-width: 500px;\n  width: 100%;\n  height: auto;\n  margin: 0 auto;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  width: 100%;\n  color: #bbb;\n  font-size: 14px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  background-color: #555;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  outline: none;\n\n  &::placeholder {\n    color: #ccc;\n  }\n`;\n\nconst Button = styled.button`\n  background-color: #e0a800;\n  color: #000;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-top: 10px;\n\n  &:hover {\n    background-color: #ffd700;\n  }\n`;\n\nconst ModalOrdenes = ({ isModalOpen, toggleModal, openConfirmationModal, userId }) => {\n\n  const [sumaTotal, setSumaTotal] = useState(0);\n  const [productos, setProductos] = useState(null);\n  const [insumos, setInsumos] = useState([]);\n  const [clientes, setClientes] = useState([]);\n  const [detalles, setDetalles] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [pagado, setPagado] = useState(null);\n  const [tipo, setTipo] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [ordenDetalle, setOrdenDetalle] = useState([]);\n  //console.log(userId);\n\n  const handleSelectChange = (e) => {\n    const selectedItemid = parseInt(e.target.value, 10);\n    const item = clientes.find((item) => item.idCliente === selectedItemid);\n    setSelectedItem(item);\n\n  };\n\n\n  useEffect(() => {\n    const cargarProductosYClientes = async () => {\n      try {\n        const url = \"http://localhost:8080/public/productos\";\n        const urlClientes = \"http://localhost:8080/public/clientes\";\n\n        const urlInsumos = \"http://localhost:8080/public/insumo/retornarTodos\";\n\n        const dataProductos = await obtenerDatos(url, 'GET');\n        const dataClientes = await obtenerDatos(urlClientes, 'GET');\n        const dataInsumo = await obtenerDatos(urlInsumos, 'GET');\n        setProductos(dataProductos);\n        setClientes(dataClientes);\n        setInsumos(dataInsumo);\n      } catch (error) {\n        console.error('Error al cargar los productos:', error);\n      }\n    };\n\n    cargarProductosYClientes();\n  }, [!productos]);\n\n  // Función para agregar un nuevo ProductoDetalle\n  const handleAgregarDetalle = () => {\n    if (productos.length > 0) {\n      // Generamos un identificador único para cada detalle\n      const nuevoDetalle = {\n        id: Date.now(), // ID único\n        productos,\n        insumos,\n        suma: 0, // Inicializamos la suma en 0\n      };\n      setDetalles([...detalles, nuevoDetalle]);\n    } else {\n      console.warn('Productos no disponibles para agregar.');\n    }\n  };\n\n  // Función para quitar el último ProductoDetalle\n  const handleQuitarDetalle = () => {\n    if (detalles.length > 0) {\n      // Eliminar el último detalle y restar su suma del total\n      const ultimoDetalle = detalles[detalles.length - 1];\n      console.log(ultimoDetalle);\n      const ultimaOrdenDetalle = ordenDetalle[detalles.length - 1];\n      const descuento = (ultimaOrdenDetalle && ultimaOrdenDetalle.descuentosPorProducto) ? parseFloat(ultimaOrdenDetalle.descuentosPorProducto) : 0;\n      const nuevaSuma = parseFloat(ultimoDetalle.suma) - descuento;\n      console.log(nuevaSuma);\n      //console.log(ultimoDetalle);\n      //console.log(descuento);\n      //console.log(ultimaOrdenDetalle);\n\n      setSumaTotal((prevSumaTotal) => (prevSumaTotal - ultimoDetalle.suma).toFixed(2));\n      setTotal((prevTotal) => prevTotal - nuevaSuma);\n      setDetalles((prevDetalles) => prevDetalles.slice(0, -1));\n      if (ordenDetalle.length === detalles.length) {\n        setOrdenDetalle((prevOrdenDetalle) => prevOrdenDetalle.slice(0, -1));\n      }\n    }\n  };\n\n  const actualizarSumaDetalle = (id, nuevaSuma) => {\n    setDetalles((prevDetalles) => {\n      // Actualizamos el detalle específico\n      const nuevosDetalles = prevDetalles.map((detalle) =>\n        detalle.id === id ?\n          { ...detalle, suma: nuevaSuma } :\n          detalle\n      );\n\n      // Recalculamos la suma total usando los nuevos detalles\n      const nuevaSumaTotal = nuevosDetalles.reduce(\n        (total, detalle) => total + detalle.suma,\n        0\n      );\n\n      // Actualizamos la suma total\n      setSumaTotal(nuevaSumaTotal);\n\n      return nuevosDetalles; // Retornamos el nuevo estado de los detalles\n    });\n  };\n\n  const enviarDatos = (event) => {\n    event.preventDefault(); // Previene la recarga del formulario\n\n    if (!selectedItem) {\n      alert('Seleccione un cliente antes de guardar.');\n      return;\n    }\n    if (!sumaTotal) {\n      alert('Total de orden no puede ser 0');\n      return;\n    }\n    if (detalles.length === 0) {\n      alert('Agregue al menos un detalle.');\n      return;\n    }\n    if (!pagado) {\n      alert('Pagado debe contener un valor');\n      return;\n    }\n    if (!tipo) {\n      alert('Seleccione un tipo de orden');\n      return;\n    }\n\n    // Capturar valores del formulario\n    const form = event.target;\n    const direccion = form.calle.value;\n    const provincia = form.provincia.value;\n    const telefono = form.telefono.value;\n    const email = form.email.value;\n    const fecha_entrega = (form.fecha.value) ? form.fecha.value : new Date().toISOString();\n\n    const contacto = new Contacto({\n      idContacto: null,\n      telefono: telefono,\n      email: email\n    });\n\n    //console.log(descuentosPorProducto);\n    const orden = new Orden({\n      cliente: selectedItem,\n      contacto: contacto,\n      domicilio: { direccion, provincia },\n      usuario: { idUsuario: userId },\n      detalle: ordenDetalle,\n      fecha_entrega,\n      subTotal: sumaTotal,\n      total: total,\n      pagado\n    });\n    console.log(orden);\n    /*\n    const ordenRespuesta = cargarOrden(orden);\n\n    if (ordenRespuesta) {\n\n      toggleModal();\n      openConfirmationModal();\n\n    } else {\n      alert(\"Ha ocurrido un error!\");\n    }*/\n  };\n\n  async function cargarOrden(orden) {\n    const url = 'http://localhost:8080/public/orden/guardar';\n\n    const data = await obtenerDatos(url, 'POST', orden);\n    return data;\n\n  }\n\n\n  function calcularDescuentos() {\n\n    let descuentosPorProducto = 0;\n\n    if (ordenDetalle.length > 0) {\n\n      for (let i = 0; i < ordenDetalle.length; i++) {\n\n        if (ordenDetalle[i].descuentosPorProducto > 0 && ordenDetalle[i].descuentosPorProducto <= sumaTotal) {\n          descuentosPorProducto += parseFloat(ordenDetalle[i].descuentosPorProducto);\n        }\n      }\n      descuentosPorProducto = sumaTotal - descuentosPorProducto;\n      setTotal(() => descuentosPorProducto);\n    }\n  }\n  return (\n    <Modal isOpen={isModalOpen} onRequestClose={toggleModal} contentLabel=\"Formulario de Nueva Orden\">\n      <ModalContent>\n        <h2 style={{ textAlign: 'center' }}>Nueva Orden</h2>\n        <Form onSubmit={enviarDatos}>\n          <Label>Cliente</Label>\n          <Select onChange={handleSelectChange}>\n            <option>Seleccione uno...</option>\n            {clientes.map((cliente) => (\n              <option key={cliente.idCliente} value={cliente.idCliente}>{cliente.nombre}  {(cliente.apellido) ? cliente.apellido : ''}</option>\n            ))}\n          </Select>\n          <div>\n            <Label>Domicilio</Label>\n            <Input type='text' name='calle' defaultValue=\"Domicilio generico.\" />\n            <Label>Provincia</Label>\n            <Input type='text' name='provincia' defaultValue=\"Mendoza\" />\n          </div>\n          <div>\n            <h3><span>Contacto</span></h3>\n            <Label>Telefono:</Label>\n            <Input type='tel' name='telefono' defaultValue=\"261\" maxLength=\"10\" />\n            <Label>Email:</Label>\n            <Input type='email' name='email' defaultValue=\"alguien@example.com\" />\n          </div>\n\n          {\n            detalles.map((detalle) => (\n              <ProductoDetalle\n                key={detalle.id}\n                cont={detalles.length}\n                contOrdenesDetalle={ordenDetalle.length}\n                productos={detalle.productos}\n                insumos={detalle.insumos}\n                onActualizarSumaTotal={(nuevaSuma) => actualizarSumaDetalle(detalle.id, nuevaSuma)}\n                setOrdenDetalle={setOrdenDetalle}\n                calcularDescuentos={calcularDescuentos}\n              />\n            ))\n          }\n          <Button type=\"button\" onClick={handleAgregarDetalle}>\n            Agregar línea de producto\n          </Button>\n          <Button type=\"button\" onClick={handleQuitarDetalle} disabled={detalles.length === 0}>\n            Quitar Último Detalle del Producto\n          </Button>\n\n          <Label>Fecha de Entrega:</Label>\n          <Input type=\"datetime-local\" name='fecha' />\n          <Label>Tipo: </Label>\n          <Select onChange={(event) => (setTipo(event.target.value))}>\n            <option value={null}>Seleccione uno...</option>\n            <option value={'PAGO'}>PAGO</option>\n            <option value={'COMPRA'}>COMPRA</option>\n            <option value={'VENTA'}>VENTA</option>\n          </Select>\n\n          <Label>Pagado:</Label>\n          <Input type=\"number\" placeholder=\"9.99\" onChange={(event) => (setPagado(parseFloat(event.target.value)))} />\n\n          <h5>subTotal: <span>${sumaTotal}</span></h5>\n          <h3>Total Orden: <span>${total}</span></h3>\n\n          <Button type=\"submit\">Enviar</Button>\n          <Button type=\"button\" onClick={toggleModal}>Cancelar</Button>\n        </Form>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ModalOrdenes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}